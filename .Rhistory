DPs$rho <- 0.9
DPs$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
DPs[DPs$studlab==18 | DPs$studlab==185,"seTE"] <- (DPs$SDd/sqrt(DPs$n1))[DPs$studlab==18 | DPs$studlab==185]
TST<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.5)
TST
# create league table and export as excel
leagueTST <- netleague(TST, digits = 2, bracket = "(", separator = " to ")
WriteXLS(leagueTST$random, ExcelFileName = "leagueTST-random.xls",
SheetNames = "leaguetable (random)", col.names = FALSE)
WriteXLS(leagueTST$random, ExcelFileName = "leagueTST-random.xls",
SheetNames = "leaguetable (random)", col.names = FALSE)
Sys.which("perl")
library(WriteXLS)
WriteXLS(leagueTST$random, ExcelFileName = "leagueTST-random.xls",
SheetNames = "leaguetable (random)", col.names = FALSE)
install.packages("xlsx")
library(xlsx)
leagueTST <- netleague(TST, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueTST$random, file = "leagueTST-random.xls",
sheetName = "leaguetable (random)", col.names = FALSE)
write.xlsx(leagueTST$random, file = "leagueTST-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgiRenamedInterventions.xlsx", na = "NA")
# prepare the data
DATApairs=pairwise(treat=Drug_name, mean=DayTimeSleepinessScaleMean, sd=DayTimeSleepinessScaleSD, n=DayTimeSleepinessScaleParticipants, data=DATA, studlab = Study_name, sm= "SMD")
# check there is no NA is the data
DPs <- DATApairs[!is.na(DATApairs$TE) & !is.na(DATApairs$seTE),]
# remove studies with "special patients" that should not be included in main analysis
#DPs <- DPs[DPs$Included==1,]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","Day_PorF-value","Day_p=0, f=1")]
# remove studies wit no p-value
DPs <- DPs[DPs$studlab!="Vinkari 1984" & DPs$studlab!="Pigeon 2010",]
# only parallel study for this outcome so no adjustment and no need for sensitivity
# save adjusted pairwise dataset for MAs
write.csv(DPs, file = "~/Virginia/NMA insomnia/DaytimeImpairment_pairwise.csv")
# run netconnection first to check for potential sub-networks
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DPs,treat2!="waitlist")
DPs1 <- DPs[-grep("chlormethiazole|triazolam|loprazolam|nitrazepam|zopiclone",DPs$treat2),]
DI1<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs1, sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
DI1
#forest plots
forest(DI1, ref="pbo", sortvar = -Pscore,xlab="MD")
# create league table and export as excel
leagueDI1 <- netleague(DI1, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueTST$random, file = "leagueDI1-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
# create league table and export as excel
leagueDI1 <- netleague(DI1, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueDI1$random, file = "leagueDI1-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(xlsx)
# create league table and export as excel
leagueDI1 <- netleague(DI1, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueDI1$random, file = "leagueDI1-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
DI2 <- netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, subset = grep("chlormethiazole|loprazolam|nitrazepam",DPs$treat1), sm="SMD",r="chlormethiazole",comb.fixed =T, comb.random = F)
DI2
DI2$trts
#network plot
netgraph(DI2, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1)
# create league table and export as excel
leagueDI2 <- netleague(DI2, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueDI2$random, file = "leagueDI2-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
#forest plots
forest(DI2, ref="chlormethiazole", sortvar = -Pscore,xlab="SMD")
knitr::opts_chunk$set(echo = TRUE)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgiRenamedInterventions.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=`Anxiety/Agitation`, n=`N_arm_total_for sideeffects`, data=DATA, studlab = Study_name, sm= "OR")
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean27.6eVirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=`Anxiety/Agitation`, n=`N_arm_total_for sideeffects`, data=DATA, studlab = Study_name, sm= "OR")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|Mindfulness|midazolam|hygiene|juice|acupressure|acupuncture",DATApairs$treat1),]
# remove interventions disconnected to main network (also have NA TE and seTE)
DPs <- DPs[-grep("massage|therapeutic",DPs$treat2),]
# remove studies with "special patients" that should not be included in main analysis
DPs <- DPs[DPs$Included==1,]
# remove studies with missing TE or seTE
DPs <- DPs[!is.na(DPs$TE),]
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
# 2 sub-networks
DPs1 <- DPs[DPs$treat2!="triazolam",]
pdrAE1<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs1,  sm="OR",r="pbo",comb.fixed =F, comb.random = T)
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=`Anxiety/Agitation`, n=`N_arm_total_for sideeffects`, data=DATA, studlab = Study_name, sm= "OR")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
options(max.print = 3000)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|Mindfulness|midazolam|hygiene|juice|acupressure|acupuncture",DATApairs$treat1),]
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DPs)
View(DATA)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|Mindfulness|massage|hygiene|juice|acupressure|acupuncture",DATApairs$treat1),]
# remove interventions disconnected to main network (also have NA TE and seTE)
DPs <- DPs[-grep("therapeutic|midazolam",DPs$treat2),]
# remove studies with "special patients" that should not be included in main analysis
DPs <- DPs[DPs$Included==1,]
# remove studies with missing TE or seTE
DPs <- DPs[!is.na(DPs$TE),]
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
# 2 sub-networks
DPs1 <- DPs[DPs$treat2!="triazolam",]
View(DPs1)
View(DPs)
View(DPs1)
View(DPs)
pdrAE2 <- netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, subset = DPs$treat2=="triazolam", sm="SMD",r="chlormethiazole",comb.fixed =T, comb.random = F)
pdrAE2
pdrAE2$trts
pdrAE2$n
#network plot
netgraph(pdrAE2, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1)
#forest plots
forest(pdrAE2, ref="chlormethiazole", sortvar = Pscore,xlab="SMD")
# create league table and export as excel
leaguePDR2 <- netleague(pdrAE2, digits = 2, bracket = "(", separator = " to ")
leaguePDR2
# create league table and export as excel
leaguePDR2 <- netleague(pdrAE2, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leaguePDR2$random, file = "leaguePDR2-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
leaguePDR2$random
knitr::opts_chunk$set(echo = TRUE)
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=SOMNOLENCE, n=`N_arm_total_for sideeffects`, data=DATA, studlab = Study_name, sm= "OR")
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean27.6eVirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=SOMNOLENCE, n=`N_arm_total_for sideeffects`, data=DATA, studlab = Study_name, sm= "OR")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATA)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|Mindfulness|massage|hygiene|juice|acupressure|acupuncture",DATApairs$treat1),]
# remove interventions disconnected to main network (also have NA TE and seTE)
DPs <- DPs[-grep("midazolam|therapeutic",DPs$treat2),]
# remove studies with "special patients" that should not be included in main analysis
DPs <- DPs[DPs$Included==1,]
# remove studies with missing TE or seTE
DPs <- DPs[!is.na(DPs$TE),]
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
#only non-crossover
InsoSEDsen=subset(DPs,Crossoverstudy==0 | Crossoverstudy==1 & `crossover, not first phase used`!=1)
View(InsoSEDsen)
netconnection(treat1,treat2,studlab,data=InsoSEDsen,warn = T)
knitr::opts_chunk$set(echo = TRUE)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgiRenamedInterventions.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
# remove studies with "special patients" that should not be included in main analysis
DPs <- DPs[DPs$Included==1,]
View(DATApairs)
knitr::opts_chunk$set(echo = TRUE)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean30.9VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
# remove studies with "special patients" that should not be included in main analysis
DPs_PsychogerPts <- DPs[DPs$Included==1,]
# remove studies with "special patients" that should not be included in main analysis
DPs_PsychogerPts <- DPs[DPs$Included==2,]
DPs <- DPs[DPs$Included==1,]
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
# remove studies with "special patients" that should not be included in main analysis
DPs_PsychogerPts <- DPs[DPs$Included==2,]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
#DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
#DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs$TE)/DPs$tvalue)[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
# assign correlation value to study 18 and 185 based on other studies to fix issues with negative variances
DPs$rho <- 0.9
DPs$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
DPs[DPs$studlab==18 | DPs$studlab==185,"seTE"] <- (DPs$SDd/sqrt(DPs$n1))[DPs$studlab==18 | DPs$studlab==185]
netconnection(DPs)
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
# save studies with "special patients" in separate dataframe
DPs_PsychogerPts <- DPs[DPs$Included==2,]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
#DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
#DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs$TE)/DPs$tvalue)[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
#   EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
### gives error: Problems in multi-arm studies! Studies with negative treatment   arm variance: '18', '185'
# assign correlation value to study 18 and 185 based on other studies to fix issues with negative variances
DPs$rho <- 0.9
DPs$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
DPs[DPs$studlab==18 | DPs$studlab==185,"seTE"] <- (DPs$SDd/sqrt(DPs$n1))[DPs$studlab==18 | DPs$studlab==185]
TST_s1<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.5)
TST_s1
TST_s1$n
TST_s1$k
#network plot
netgraph(TST_s1, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1, number.of.studies=T)
#forest plots
forest(TST_s1, ref="pbo", sortvar = -Pscore,xlab="MD")
# create league table and export as excel
leagueTST_s1 <- netleague(TST_s1, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueTST_s1$random, file = "leagueTST-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
cat(paste("tau=",round(TST_s1$tau,3)))
cat(paste("I2=",round(TST_s1$I2, digits = 2)*100,"%"))
#prepare the data
DATApairs=pairwise(treat=Drug Group,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#prepare the data
DATApairs=pairwise(treat=`Drug Group`,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(xlsx)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean30.9VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#prepare the data
DATApairs=pairwise(treat=`Drug Group`,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(xlsx)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean4.10VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
View(DPs)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean30.9VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
# save studies with "special patients" in separate dataframe
DPs_PsychogerPts <- DPs[DPs$Included==2,]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
#DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
#DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs$TE)/DPs$tvalue)[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
View(DPs_PsychogerPts)
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
# assign correlation value to study 18 and 185 based on other studies to fix issues with negative variances
DPs$rho <- 0.9
DPs$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
DPs[DPs$studlab==18 | DPs$studlab==185,"seTE"] <- (DPs$SDd/sqrt(DPs$n1))[DPs$studlab==18 | DPs$studlab==185]
TST_s1<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.5)
TST_s1<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.5)
TST_s1
TST_s1$n
TST_s1$k
#network plot
netgraph(TST_s1, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1, number.of.studies=T)
#forest plots
forest(TST_s1, ref="pbo", sortvar = -Pscore,xlab="MD")
# create league table and export as excel
leagueTST_s1 <- netleague(TST_s1, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueTST_s1$random, file = "leagueTST_s1-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
#get the data for sensitivity analysis by drug group
DATA2 <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean4.10VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs2=pairwise(treat=`Drug Group`,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA2, studlab = Final_ID_all, sm= "MD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs2,warn = T)
#remove rows for studies disconnected from main network
DPs <- DATApairs2[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs2$treat1),]
#remove rows for studies disconnected from main network
DPs2 <- DATApairs2[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs2$treat1),]
View(DPs2)
# # save studies with "special patients" in separate dataframe
# DPs_PsychogerPts <- DPs[DPs$Included==2,]
#
#check p-value availability for paired t-test for crossover studies with both phases used
DPs2[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
# #DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
# #DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs$TE)/DPs$tvalue)[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
# # save studies with "special patients" in separate dataframe
# DPs_PsychogerPts <- DPs[DPs$Included==2,]
#
#check p-value availability for paired t-test for crossover studies with both phases used
DPs2[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs2[DPs2$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs2$tvalue <- qt(as.numeric(DPs2$`tst_PorF-value`)/2, df=DPs2$n1-1, lower.tail = F)
# #DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
# #DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs2[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs2$TE)/DPs$tvalue)[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1]
TsT2<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs2,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
# assign correlation value to study 18 based on other studies to fix issues with negative variances
DPs$rho <- 0.9
DPs$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
# assign correlation value to study 18 based on other studies to fix issues with negative variances
DPs2$rho <- 0.9
DPs2$SDd <- sqrt(DPs$sd1^2 + DPs$sd2^2 - 2*DPs$rho*DPs$sd1*DPs$sd2)
DPs2$SDd <- sqrt(DPs2$sd1^2 + DPs2$sd2^2 - 2*DPs2$rho*DPs2$sd1*DPs2$sd2)
DPs2[DPs2$studlab==18,"seTE"] <- (DPs2$SDd/sqrt(DPs2$n1))[DPs2$studlab==18 | DPs2$studlab==185]
DPs2[DPs2$studlab==18,"seTE"] <- (DPs2$SDd/sqrt(DPs2$n1))[DPs2$studlab==18]
TST_s2<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs2,  sm="MD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.5)
TST_s2$n
TST_s2$k
View(DPs2)
#network plot
netgraph(TST_s2, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1, number.of.studies=T)
#forest plots
forest(TST_s2, ref="pbo", sortvar = -Pscore,xlab="MD")
# create league table and export as excel
leagueTST_s2 <- netleague(TST_s2, digits = 2, bracket = "(", separator = " to ")
write.xlsx(leagueTST_s2$random, file = "leagueTST_s2-random.xls",
sheetName = "leaguetable (random)", col.names = F, row.names = F)
cat(paste("tau=",round(TST_s2$tau,3)))
cat(paste("I2=",round(TST_s2$I2, digits = 2)*100,"%"))
# #DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
# #DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs2[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1,"seTE"] <- (abs(DPs2$TE)/DPs$tvalue)[DPs2$Crossoverstudy==1 & DPs2$`crossover, not first phase used`==1]
knitr::opts_chunk$set(echo = TRUE)
SQ2 <- netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, subset = grep("chlormethiazole|triazolam|loprazolam|nitrazepam",DPs$treat1), sm="SMD",r="chlormethiazole",comb.fixed =T, comb.random = F)
SQ2
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(xlsx)
#get the data and select them
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean30.9VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
View(DATApairs)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
options(max.print = 3000)
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
### no need for sensitivity analysis including psychogeriatric patients as only study including them for this outcome is disconnected to the rest of the network
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean4.10VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=treat=`Drug Group`,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#prepare the data
DATApairs=pairwise(treat=`Drug Group`,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
View(DATApairs)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat1!="BBT I" & treat1!="auricular acupuncture")
DPs <- DPs[-grep("LAT|MAT|acupressure|waitlist|therapeutic|hygiene|juice",DPs$treat2),]
View(DATApairs)
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","squal_PorF-value","squal_p=0, f=1")]
# use threshold value for those with p-value <0.025
DPs[DPs$studlab==17, "squal_PorF-value"] <- 0.02499
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","squal_PorF-value","squal_p=0, f=1")]
# remove studies for which no p-value available
DPs <- DPs[DPs$studlab!=21,]
# now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`squal_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+(DPs$TE^2)/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
View(DPs)
View(DPs)
SQs<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, sm="SMD",r="nitrazepam",comb.fixed =F, comb.random = T)
SQs<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
DPs[,c("studlab","rho")]
DPs[DPs$studlab==18,"rho"] <- 0.9
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+(DPs$TE^2)/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
SQs<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs, sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
View(DPs)
SQ1$trts
SQs$trts
SQs$n
SQs$k
View(DPs)
#network plot
netgraph(SQ1, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1, number.of.studies=T)
#network plot
netgraph(SQs, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1, number.of.studies=T)
#forest plots
forest(SQs, ref="pbo", sortvar = Pscore,xlab="SMD")
cat(paste("tau=",round(SQ1$tau,3)))
cat(paste("tau=",round(SQs$tau,3)))
cat(paste("I2=",round(SQs$I2, digits = 2)*100,"%"))
### no need for sensitivity analysis including psychogeriatric patients as only study including them for this outcome is disconnected to the rest of the network
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoClean30.9VirgiRenamedIntervSideEffectsClean.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=`Drug Group`,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")

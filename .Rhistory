library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATA)
View(DATApairs)
grep("LAT",DATApairs$treat2)
grepl("LAT",DATApairs$treat2)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & !grep("LAT", treat2))
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & !grep("LAT", DATApairs$treat2))
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", colnames(treat2))
-grep("LAT", colnames(treat2)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", colnames(treat2)))
-grep("LAT", colnames(treat2))
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", colnames(DATApairs)))
-grep("LAT", colnames(DATApairs))
grep("LAT", colnames(DATApairs))
-grep("LAT", DATApairs$treat2)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", DATApairs$treat2)))
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", DATApairs$treat2))
-grepl("LAT", DATApairs$treat2)
DPs <- DATApairs[treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam" & -grep("LAT", DATApairs$treat2),]
DPs <- DATApairs[DATApairs$treat2!="waitlist" & DATApairs$treat2!="artificial juice" & DATApairs$treat2!="sleep hygiene" & DATApairs$treat2!="oxazepam" & -grep("LAT", DATApairs$treat2),]
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$tvalue
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1]
DPs$SDd
DPs$rho
DPs$seTE
View(DPs)
View(DPs)
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,subset=(-18,-185),sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,subset=c(-18,-185),sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,subset=DPs[DPs$studlab!=18],sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,subset=DPs$studlab!=18,sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)
DPs2 <- subset(DPs, studlab!=18 & studlab!=185)
View(DPs2)
View(DPs)
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs2,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
EFF
View(DPs)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
DPs$rho
# Average Overlap
AO <- function(x, y, k) {
Ad <- sapply(1:k, function(i) length(intersect(x[1:i], y[1:i])))/seq(1,k)
AO <- cumsum(Ad)/seq(1,k)
return(AO)
}
# Average Overlap
averageoverlap <- function(x, y, k) {
Ad <- sapply(1:k, function(i) length(intersect(x[1:i], y[1:i])))/seq(1,k)
AO <- cumsum(Ad)/seq(1,k)
return(AO)
}
library(rankingagreement)
rm(list=ls())
library(devtools)
library(nmadata)
library(readxl)
install_github("esm-ispm-unibe-ch/NMAJags")
install_github("esm-ispm-unibe-ch/rankingagreement")
library(rankingagreement)
library(NMAJags)
library(R2jags)
library(netmeta)
library(ircor)
nmadb = getNMADB()
# nmadb_used = nmadb[nmadb$Verified=="True" & nmadb$Format!="iv" & (nmadb$Type.of.Outcome.=="Binary" | nmadb$Type.of.Outcome.=="Continuous"),]
# get IDs of networks separately for binary and continuous outcome; those with inverse-variance excluded
binaryIDs = nmadb[nmadb$Verified=="True" & nmadb$Type.of.Outcome.=="Binary" & nmadb$Format!="iv",]$Record.ID
continuousIDs = nmadb[nmadb$Verified=="True" & nmadb$Type.of.Outcome.=="Continuous" & nmadb$Format!="iv",]$Record.ID
# calculate ranking metrics for continuous outcome networks
continuous_rm = lapply(continuousIDs,
function(rid) {
tryCatch({
nma = runnetmeta(rid)
netd = readByID(rid)
if (nmadb[nmadb$Record.ID==rid,]$Harmful.Beneficial.Outcome=="Beneficial"){
nmaranks = netmetaranks_B(nma,1000)
altnma = alternativenma(nma, small.values = "bad")
jagsranks = nmajagsranks_con_B(netd$data)
}
else {
nmaranks = netmetaranks_H(nma,1000)
altnma = alternativenma(nma)
jagsranks = nmajagsranks_con(netd$data)
}
return(list("no. treatments"=nma$n, "no. studies"=nma$k,"sample size"=sum(netd$data$n),
"ranking metrics"=cbind(nmaranks,jagsranks, "Avg TE"=altnma$averages$TE, "Avg TE ranks"=altnma$averages$TE_ranks, "Avg Pscore"=altnma$averages$Pscoreaverage),
"Avg TE prec var"=(max(altnma$averages$seTE^2)-min(altnma$averages$seTE^2))/max(altnma$averages$seTE^2),
"Avg TE prec avg"=mean(altnma$averages$seTE^2)))
},  error=function(cond){
message(cond)
return(list(recid=rid,error=cond))
}
)
}
)
names(continuous_rm) <- as.character(continuousIDs)
head(continuous_rm)
# calculate ranking metrics for binary outcome networks
binary_rm = lapply(binaryIDs,
function(rid) {
tryCatch({
nma = runnetmeta(rid)
netd = readByID(rid)
if (nmadb[nmadb$Record.ID==rid,]$Harmful.Beneficial.Outcome=="Beneficial"){
nmaranks = netmetaranks_B(nma,1000)
altnma = alternativenma(nma, small.values = "bad")
jagsranks = nmajagsranks_bin_B(netd$data)
}
else {
nmaranks = netmetaranks_H(nma,1000)
altnma = alternativenma(nma)
jagsranks = nmajagsranks_bin(netd$data)
}
return(list("no. treatments"=nma$n, "no. studies"=nma$k,"sample size"=sum(netd$data$n),
"ranking metrics"=cbind(nmaranks,jagsranks, "Avg TE"=altnma$averages$TE, "Avg TE ranks"=altnma$averages$TE_ranks, "Avg Pscore"=altnma$averages$Pscoreaverage),
"Avg TE prec var"=(max(altnma$averages$seTE^2)-min(altnma$averages$seTE^2))/max(altnma$averages$seTE^2),
"Avg TE prec avg"=mean(altnma$averages$seTE^2)))
},   error=function(cond){
message(cond)
return(list(recid=rid,error=cond))
}
)
}
)
names(binary_rm) <- as.character(binaryIDs)
head(binary_rm)
# create lists with only ranks for kendall correlation
con_ranks <- lapply(1:length(continuous_rm), function(i) continuous_rm[[i]][["ranking metrics"]][,grepl("rank",colnames(continuous_rm[[i]][["ranking metrics"]]))])
names(con_ranks) <- as.character(continuousIDs)
head(con_ranks)
bin_ranks <- lapply(1:length(binary_rm), function(i) binary_rm[[i]][["ranking metrics"]][,grepl("rank",colnames(binary_rm[[i]][["ranking metrics"]]))])
names(bin_ranks) <- as.character(binaryIDs)
head(bin_ranks)
# calculate average overlap
AO_con <- lapply(con_ranks, averageoverlap(con_ranks[[,i]],con_ranks[[,j]]), 3)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
View(DPs)
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
View(DPs)
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$`tst_PorF-value`!=NA,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6c.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
DPs$`tst_PorF-value`!=NA
DPs$`tst_PorF-value`
DPs[DPs$`tst_PorF-value`!=NA]$studlab
DPs[DPs$`tst_PorF-value`!=NA,]$studlab
DPs[DPs$`tst_PorF-value`==NA,]$studlab
DPs[DPs$`tst_PorF-value`!=NA,]$studlab
DPs[DPs$`tst_PorF-value`!="NA",]$studlab
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161 | DPs$studlab!=270,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161 & DPs$studlab!=270,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#remove crossover studies with paired t-test p-value not available
DPs <- DPs[DPs$studlab!=161,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==0,]
#check p-value availability for paired t-test
DPs[,c("studlab","tst_PorF-value","tst_p=0, f=1")][DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,,c("studlab","tst_PorF-value","tst_p=0, f=1")]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"]
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1 + DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover]
sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6cVirgi.xlsx", na = "NA")
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgi.xlsx", na = "NA")
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist" & treat2!="artificial juice" & treat2!="sleep hygiene" & treat2!="oxazepam")
DPs <- DPs[-grep("LAT",DPs$treat2),]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
EFF<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05, details.chkmultiarm = T)    ### gives error: Problems in multi-arm studies! Studies with negative treatment arm variance: '18', '185'
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgiRenamedInterventions.xlsx", na = "NA")
DATAs <- subset(DATA, DATA$SleepQualityScaleParticipants!='NA')
#describe the data
tapply(DATAs$N_arm_total_stapf,DATAs$Drug_name,sum,na.rm=T)
#describe the data
tapply(DATA$N_arm_total_stapf,DATAs$Drug_name,sum,na.rm=T)
#describe the data
tapply(DATA$N_arm_total_stapf,DATAs$Drug_name,sum,na.rm=T)
#describe the data
tapply(DATAs$N_arm_total_stapf,DATAs$Drug_name,sum,na.rm=T)
View(DATA)
print(length(table(DATAs$Drug_name)))
print(length(table(DATAs$Final_ID_all)))
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATApairs)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
options(max.print = 5000)
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat2!="waitlist")
DPs <- DPs[-grep("LAT|MAT|acupressure|acupuncture|therapeutic|hygiene|juice",DPs$treat1),]
View(DPs)
DPs <- DPs[-grep("LAT|MAT|acupressure|acupuncture|therapeutic|hygiene|juice|BBT I",DPs$treat1),]
View(DPs)
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepQualityScaleMean,sd=SleepQualityScaleSD,n=SleepQualityScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- subset(DATApairs, treat1!="BBT I" & treat1!="auricular acupuncture")
DPs <- DPs[-grep("LAT|MAT|acupressure|waitlist|therapeutic|hygiene|juice",DPs$treat2),]
View(DPs)
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","squal_PorF-value","squal_p=0, f=1")]
# use threshold value for those with p-value <0.025
DPs[DPs$studlab==17, "squal_PorF-value"] <- 0.02499
# remove studies for which no p-value available
DPs <- DPs[DPs$studlab!=94 & DPs$studlab!=21,]
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","squal_PorF-value","squal_p=0, f=1")]
# now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`squal_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
# assign other correlation value to study 18 and 185 based on other studies
# DPs[,c("studlab","rho")]
# DPs[DPs$studlab==18|DPs$studlab==185,"rho"] <- 0.9
# DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
SQ<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
View(DPs)
DPs <- DPs[DPs$studlab!=13,]
netconnection(treat1,treat2,studlab,data=DPs,warn = T)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
#get the data and select them
DATA <- read_excel("~/Virginia/NMA insomnia/Insomnia/MyrtoIncludedAllOutcomesClean27.6dVirgiRenamedInterventions.xlsx", na = "NA")
DATAs <- subset(DATA, DATA$SleepTimeTotalScaleParticipants!='NA')
#prepare the data
DATApairs=pairwise(treat=Drug_name,mean=SleepTimeTotalScaleMean,sd=SleepTimeTotalScaleSD,n=SleepTimeTotalScaleParticipants, data=DATA, studlab = Final_ID_all, sm= "SMD")
#run NMA and create an object called EFF for efficacy   ### gives error because consists of 5 separate sub-networks so run netconnection first
netconnection(treat1,treat2,studlab,data=DATApairs,warn = T)
View(DATApairs)
#remove rows for studies disconnected from main network
DPs <- DPs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DPs$treat1),]
#remove rows for studies disconnected from main network
DPs <- DPs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
#remove rows for studies disconnected from main network
DPs <- DATApairs[-grep("LAT|MAT|BBT I|midazolam|hygiene|juice",DATApairs$treat1),]
View(DPs)
#check p-value availability for paired t-test for crossover studies with both phases used
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,c("studlab","tst_PorF-value","tst_p=0, f=1")]
# use threshold value for those with p-value <0.001
DPs[DPs$studlab==185, "tst_PorF-value"] <- 0.00099
#now calculate adjusted SE for remaining crossover studies
DPs$tvalue <- qt(as.numeric(DPs$`tst_PorF-value`)/2, df=DPs$n1-1, lower.tail = F)
DPs$SDd <- abs((DPs$mean2-DPs$mean1)/DPs$tvalue*sqrt(DPs$n1))
DPs$rho <- (DPs$sd1^2 + DPs$sd2^2 - DPs$SDd^2)/(2*DPs$sd1*DPs$sd2)
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
TST<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
# assign other correlation value to study 18 and 185 based on other studies
DPs[,c("studlab","rho")]
DPs[DPs$studlab==18|DPs$studlab==185,"rho"] <- 0.9
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
TST<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
# assign other correlation value to study 18 and 185 based on other studies
DPs[,c("studlab","rho")]
DPs[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1,"seTE"] <- sqrt((1/DPs$n1+DPs$TE/(2*DPs$n1))*(2-2*DPs$rho))[DPs$Crossoverstudy==1 & DPs$`crossover, not first phase used`==1]
TST<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T)
TST<-netmeta(TE,seTE,treat1,treat2,studlab,data=DPs,  sm="SMD",r="pbo",comb.fixed =F, comb.random = T, tol.multiarm = 0.05)
TST
DPs$seTE
